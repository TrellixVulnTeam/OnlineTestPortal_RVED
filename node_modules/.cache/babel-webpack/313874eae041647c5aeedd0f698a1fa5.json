{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/hp/Desktop/OnlineTestPortal/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(formBuilder, authService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.submitted = false;\n    this.message = undefined; // Create Form Group\n\n    this.form = this.formBuilder.group({\n      username: [null, [Validators.required]],\n      password: [null, [Validators.required]],\n      type: [null, [Validators.required]]\n    });\n  }\n\n  ngOnInit() {} // Method to Validate Form & Authenticate User\n\n\n  onSubmit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.submitted = true;\n\n      if (_this.form.invalid) {\n        return;\n      } // Call Login Method to Check User Authentication\n\n\n      yield _this.authService.login(_this.form.get('username').value, _this.form.get('password').value, _this.form.get('type').value);\n\n      if (_this.authService.isLoggedIn === false) {\n        _this.message = \"Please Check Your Credentials\";\n      } else {\n        _this.message = undefined;\n      }\n    })();\n  }\n\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"sources":["C:\\Users\\hp\\Desktop\\OnlineTestPortal\\src\\app\\login\\login.component.ts"],"names":[],"mappings":";;AACA,SAAS,SAAT,QAA4D,eAA5D;AACA,SAAiC,UAAjC,QAAmD,gBAAnD;AAQA,IAAa,cAAc,GAA3B,MAAa,cAAb,CAA2B;AAMzB,EAAA,WAAA,CAAoB,WAApB,EACS,WADT,EACiC;AADb,SAAA,WAAA,GAAA,WAAA;AACX,SAAA,WAAA,GAAA,WAAA;AAJT,SAAA,SAAA,GAAqB,KAArB;AACA,SAAA,OAAA,GAAkB,SAAlB,CAGiC,CAC7B;;AACA,SAAK,IAAL,GAAY,KAAK,WAAL,CAAiB,KAAjB,CACV;AACE,MAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,CAAC,UAAU,CAAC,QAAZ,CAAP,CADZ;AAEE,MAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,CAAC,UAAU,CAAC,QAAZ,CAAP,CAFZ;AAGE,MAAA,IAAI,EAAE,CAAC,IAAD,EAAO,CAAC,UAAU,CAAC,QAAZ,CAAP;AAHR,KADU,CAAZ;AAOH;;AAED,EAAA,QAAQ,GAAA,CACP,CAnBwB,CAqBzB;;;AACM,EAAA,QAAQ,GAAA;AAAA;;AAAA;AACZ,MAAA,KAAI,CAAC,SAAL,GAAiB,IAAjB;;AACA,UAAI,KAAI,CAAC,IAAL,CAAU,OAAd,EAAuB;AACrB;AACD,OAJW,CAKZ;;;AACA,YAAM,KAAI,CAAC,WAAL,CAAiB,KAAjB,CAAuB,KAAI,CAAC,IAAL,CAAU,GAAV,CAAc,UAAd,EAA0B,KAAjD,EAAwD,KAAI,CAAC,IAAL,CAAU,GAAV,CAAc,UAAd,EAA0B,KAAlF,EAAyF,KAAI,CAAC,IAAL,CAAU,GAAV,CAAc,MAAd,EAAsB,KAA/G,CAAN;;AACA,UAAI,KAAI,CAAC,WAAL,CAAiB,UAAjB,KAAgC,KAApC,EAA2C;AACzC,QAAA,KAAI,CAAC,OAAL,GAAe,+BAAf;AACD,OAFD,MAEO;AACL,QAAA,KAAI,CAAC,OAAL,GAAe,SAAf;AACD;AAXW;AAYb;;AAlCwB,CAA3B;AAAa,cAAc,GAAA,UAAA,CAAA,CAN1B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,WADD;AAET,EAAA,WAAW,EAAE,wBAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,uBAAD;AAHF,CAAD,CAMiB,CAAA,EAAd,cAAc,CAAd;SAAA,c","sourcesContent":["import { AuthService } from './../auth/auth.service';\nimport { Component, ComponentFactoryResolver, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  // Declare Properties\n  form: FormGroup;\n  submitted: boolean = false;\n  message: string = undefined;\n\n  constructor(private formBuilder: FormBuilder,\n    public authService: AuthService) { \n      // Create Form Group\n      this.form = this.formBuilder.group(\n        {\n          username: [null, [Validators.required]],\n          password: [null, [Validators.required]],\n          type: [null, [Validators.required]]\n        }\n      );\n  }\n\n  ngOnInit(): void {\n  }\n\n  // Method to Validate Form & Authenticate User\n  async onSubmit() {\n    this.submitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    // Call Login Method to Check User Authentication\n    await this.authService.login(this.form.get('username').value, this.form.get('password').value, this.form.get('type').value);\n    if (this.authService.isLoggedIn === false) {\n      this.message = \"Please Check Your Credentials\";\n    } else {\n      this.message = undefined;\n    }\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}