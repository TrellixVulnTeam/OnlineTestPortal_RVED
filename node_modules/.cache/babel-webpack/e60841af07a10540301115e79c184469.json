{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/database\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(firebase, router) {\n      this.firebase = firebase;\n      this.router = router; // Declare Properties\n\n      this.users = undefined;\n      this.user = undefined;\n    } // Method to Authenticate User\n\n\n    login(username, password, type) {\n      this.firebase.list('users').valueChanges().subscribe(value => {\n        this.users = value;\n        this.user = this.users.find(user => user.username == username.trim() && user.password == password.trim() && user.type == type.trim());\n\n        if (this.user) {\n          sessionStorage.setItem('state', 'true');\n          sessionStorage.setItem('username', this.user.username.toString());\n          sessionStorage.setItem('fullname', this.user.fullname.toString());\n          sessionStorage.setItem('type', this.user.type.toString());\n\n          if (this.user.type === 'admin') {\n            this.router.navigate(['results']);\n          } else {\n            this.router.navigate(['exam']);\n          }\n        } else {\n          sessionStorage.setItem('state', 'false');\n          sessionStorage.setItem('username', null);\n          sessionStorage.setItem('fullname', null);\n          sessionStorage.setItem('type', null);\n        }\n      });\n    } // Property to Hold User Login State\n\n\n    get isLoggedIn() {\n      const state = sessionStorage.getItem('state');\n      return state !== null && JSON.parse(state) === true ? true : false;\n    } // Method to Get User Type or Role in System\n\n\n    getRole() {\n      const type = sessionStorage.getItem('type');\n      return type;\n    } // Method to Logout & Clear Storages\n\n\n    logOut() {\n      sessionStorage.removeItem('state');\n      sessionStorage.removeItem('username');\n      sessionStorage.removeItem('fullname');\n      sessionStorage.removeItem('type');\n      this.router.navigate(['home']);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireDatabase), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}