{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/database\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(firebase, router) {\n      this.firebase = firebase;\n      this.router = router;\n      this.usersList = [];\n      this.user = {\n        username: null,\n        password: null,\n        fullname: null,\n        type: null,\n        email: null,\n        mobile: null\n      }; // Fetch users from Database into users AngularFireList \n\n      this.users = this.firebase.list('users');\n    } // Method to Authenticate User\n\n\n    login(username, password, type) {\n      // Retreive users\n      this.users.snapshotChanges().subscribe(list => {\n        this.usersList = [];\n        this.usersList = list.map(item => {\n          return Object.assign({\n            $key: item.key\n          }, item.payload.val());\n        }); // Find User by USername, Password, & Type\n\n        this.user = this.usersList.find(user => user.username == username.trim() && user.password == password.trim() && user.type == type.trim()); // Create Local Storages & Identify User Privileges in System\n\n        if (this.user) {\n          localStorage.setItem('state', 'true');\n          localStorage.setItem('username', this.user.username);\n          localStorage.setItem('fullname', this.user.fullname);\n          localStorage.setItem('type', this.user.type);\n\n          if (this.user.type === 'admin') {\n            this.router.navigate(['results']);\n          } else {\n            this.router.navigate(['exam']);\n          }\n        } else {\n          localStorage.setItem('state', 'false');\n          localStorage.setItem('username', null);\n          localStorage.setItem('fullname', null);\n          localStorage.setItem('type', null);\n        }\n      });\n    } // Property to Hold Login State\n\n\n    get isLoggedIn() {\n      const state = localStorage.getItem('state');\n\n      if (state !== null && JSON.parse(state) === true) {\n        return true;\n      } else if (state !== null && JSON.parse(state) === false) {\n        return false;\n      } else {\n        return null;\n      }\n    } // Method to Get User Type or Role in System\n\n\n    getRole() {\n      const type = localStorage.getItem('type');\n      return type;\n    } // Method to Get Username\n\n\n    getUsername() {\n      const username = localStorage.getItem('username');\n      return username;\n    } // Method to Get Fullname\n\n\n    getFullname() {\n      const name = localStorage.getItem('fullname');\n      return name;\n    } // Method to Clear Local Storages & Logout\n\n\n    logOut() {\n      localStorage.removeItem('state');\n      localStorage.removeItem('username');\n      localStorage.removeItem('fullname');\n      localStorage.removeItem('type');\n      this.router.navigate(['home']);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireDatabase), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}