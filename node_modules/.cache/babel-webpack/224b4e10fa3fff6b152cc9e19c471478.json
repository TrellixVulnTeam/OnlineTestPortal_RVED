{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/hp/Desktop/OnlineTestPortal/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./../auth/auth.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction LoginComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" Please Check Your Credentials \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport class LoginComponent {\n  constructor(formBuilder, authService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.submitted = false; // Create Form Group\n\n    this.form = this.formBuilder.group({\n      username: [null, [Validators.required]],\n      password: [null, [Validators.required]],\n      type: [null, [Validators.required]]\n    });\n  }\n\n  ngOnInit() {} // Method to Validate Form & Authenticate User\n\n\n  onSubmit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.submitted = true;\n\n      if (_this.form.invalid) {\n        return;\n      } // Call Login Method to Check User Authentication\n\n\n      yield _this.authService.login(_this.form.get('username').value, _this.form.get('password').value, _this.form.get('type').value);\n      _this.state = sessionStorage.getItem('state');\n    })();\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 27,\n  vars: 11,\n  consts: [[1, \"row\"], [1, \"col-md-4\", \"offset-md-4\"], [1, \"login-form\", \"bg-light\", \"mt-4\", \"p-4\"], [1, \"row\", \"g-3\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"form-group\", \"col-12\"], [\"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"type\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"user\"], [\"value\", \"admin\"], [1, \"form-group\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"float-end\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵelementStart(5, \"h3\");\n      i0.ɵɵtext(6, \"Login Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, LoginComponent_div_7_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵelementStart(9, \"label\");\n      i0.ɵɵtext(10, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 6);\n      i0.ɵɵelementStart(13, \"label\");\n      i0.ɵɵtext(14, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 6);\n      i0.ɵɵelementStart(17, \"label\");\n      i0.ɵɵtext(18, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"select\", 9);\n      i0.ɵɵelementStart(20, \"option\", 10);\n      i0.ɵɵtext(21, \"User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"option\", 11);\n      i0.ɵɵtext(23, \"Admin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 12);\n      i0.ɵɵelementStart(25, \"button\", 13);\n      i0.ɵɵtext(26, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted === true && ctx.authService.isLoggedIn === false);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && ctx.form.get(\"username\").errors));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.form.get(\"password\").errors));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.form.get(\"type\").errors));\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i3.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i3.NgClass, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\hp\\Desktop\\OnlineTestPortal\\src\\app\\login\\login.component.ts","C:\\Users\\hp\\Desktop\\OnlineTestPortal\\src\\app\\login\\login.component.html"],"names":[],"mappings":"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","sourcesContent":["import { AuthService } from './../auth/auth.service';\nimport { Component, ComponentFactoryResolver, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  // Declare Properties\n  form: FormGroup;\n  submitted: boolean = false;\n  state: any;\n\n  constructor(private formBuilder: FormBuilder,\n    public authService: AuthService) { \n      // Create Form Group\n      this.form = this.formBuilder.group(\n        {\n          username: [null, [Validators.required]],\n          password: [null, [Validators.required]],\n          type: [null, [Validators.required]]\n        }\n      );\n  }\n\n  ngOnInit(): void {\n  }\n\n  // Method to Validate Form & Authenticate User\n  async onSubmit() {\n    this.submitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    // Call Login Method to Check User Authentication\n    await this.authService.login(this.form.get('username').value, this.form.get('password').value, this.form.get('type').value);\n    this.state = sessionStorage.getItem('state');\n  };\n}\n","<div class=\"row\">\n    <div class=\"col-md-4 offset-md-4\">\n        <div class=\"login-form bg-light mt-4 p-4\">\n            <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"row g-3\">\n                <div class=\"text-center\">\n                    <h3>Login Form</h3>\n                    <div *ngIf=\"submitted === true && authService.isLoggedIn === false\" class=\"alert alert-danger\" role=\"alert\">\n                      Please Check Your Credentials\n                    </div>\n                </div>\n                <div class=\"form-group col-12\">\n                  <label>Username</label>\n                  <input\n                    type=\"text\"\n                    formControlName=\"username\"\n                    class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && form.get('username').errors }\"\n                  />\n                </div>\n            \n                <div class=\"form-group col-12\">\n                  <label>Password</label>\n                  <input\n                    type=\"password\"\n                    formControlName=\"password\"\n                    class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && form.get('password').errors }\"\n                  />\n                </div>\n          \n                <div class=\"form-group col-12\">\n                  <label>Type</label>\n                  <select formControlName=\"type\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && form.get('type').errors }\">\n                      <option value=\"user\">User</option>\n                      <option value=\"admin\">Admin</option>\n                  </select>\n                </div>\n            \n                <div class=\"form-group\">\n                  <button type=\"submit\" class=\"btn btn-success float-end\">Login</button>\n                </div>\n              </form>\n        </div>\n    </div>\n  </div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}