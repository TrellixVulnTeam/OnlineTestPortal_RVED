{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./../services/exam.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction ExamComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 4);\n    i0.ɵɵelement(4, \"input\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.questions[i_r2].body);\n  }\n}\n\nexport let ExamComponent = /*#__PURE__*/(() => {\n  class ExamComponent {\n    constructor(formBuilder, examService) {\n      this.formBuilder = formBuilder;\n      this.examService = examService;\n      this.form = new FormGroup({});\n      this.submitted = false;\n      this.questions = undefined;\n    }\n\n    ngOnInit() {\n      this.questions = this.examService.getQuestions();\n      this.questions.forEach(question => {\n        this.form.addControl(question.id.toString(), new FormControl(null, [Validators.required]));\n      });\n    } // Method to Validate Form & Submit Answers\n\n\n    onSubmit() {\n      this.submitted = true;\n\n      if (this.form.invalid) {\n        return;\n      }\n    }\n\n  }\n\n  ExamComponent.ɵfac = function ExamComponent_Factory(t) {\n    return new (t || ExamComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ExamService));\n  };\n\n  ExamComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ExamComponent,\n    selectors: [[\"app-exam\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"class\", \"form-group\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"form-group\"], [\"type\", \"radio\", \"formControlName\", \"control.id\", \"value\", \"True\", 1, \"form-control\"], [\"type\", \"radio\", \"formControlName\", \"control.id\", \"value\", \"False\", 1, \"form-control\"]],\n    template: function ExamComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ExamComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtemplate(1, ExamComponent_div_1_Template, 5, 1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"button\", 2);\n        i0.ɵɵtext(3, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.form.controls);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i3.NgForOf, i1.RadioControlValueAccessor, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"\"]\n  });\n  return ExamComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}